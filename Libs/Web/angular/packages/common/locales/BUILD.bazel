load("//tools:defaults.bzl", "pkg_npm", "ts_library")

package(default_visibility = ["//visibility:public"])

ts_library(
    name = "locales",
    srcs = glob(
        ["**/*.ts"],
        exclude = ["closure-locale.ts"],
    ),
)

pkg_npm(
    name = "package",
    srcs = glob(["global/*.js"]) + ["package.json"],
    substitutions = {
        # Workaround for `.d.ts`` containing `/// <amd-module .../>`
        # which are generated in TypeScript v2.9, but not before.
        "/// <amd-module name=.*/>": "",
        # Workaround for https://github.com/angular/angular/issues/23217
        # Webpack will detect that the UMD outputs from TypeScript pass the
        # `require` function into the module, and cannot accurately track
        # dependencies in case require was called.
        # We don't actually import anything in the locale code so we can
        # null out the require reference passed into the module.
        "factory\(require, exports\)": "factory(null, exports)",
    },
    deps = [":locales"],
)
